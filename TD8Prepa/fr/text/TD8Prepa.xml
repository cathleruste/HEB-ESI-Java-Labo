<?xml version="1.0" encoding="UTF-8"?>
<lesson xmlns="http://www.elml.ch" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.elml.ch ../../../_config/validate.xsd" 
    label="TD8Prepa" title="TD8 - Exercices préparatoires">
  
  
	<entry>
		<paragraph>  
			Afin d'arriver au laboratoire dans les meilleures conditions, 
			il est bien de revoir la matière qui sera mise en pratique. 
			C'est pourquoi nous vous fournissons quelques exercices préparatoires 
			à faire à la maison pour vous permettre d'évaluer si vous êtes prêt. 
		</paragraph>
	</entry>
	
	<unit label="TD8Prepa" title="Exercices préparatoires au TD8">
		
		<learningObject title="Survol du langage : Les tableaux à deux dimensions">
    
      <clarify>
        <paragraph title="Tableau à deux dimensions" icon="icon_reading"/>
				<paragraph>
          Comme pour un tableau à une dimension, un tableau à deux dimensions est une suite d’éléments portant
          tous le même nom mais se distinguant les uns des autres par un double indice. <newLine/>
        </paragraph>
      </clarify>
      
      <act>
        <selfCheck title="Bornes d'un tableau" shuffle="yes">
          <fillInBlanks>
            <question></question>
            <gapText>
							<paragraph>
								Les variables permettant de se déplacer dans un tableau s'appellent les 
								<gap answers="">indices</gap>.
							</paragraph>
							<paragraph>
								La première valeur d'un tableau de <formatted style="bold">5*10</formatted> éléments se trouve à la position (
								<gap answers="">0</gap>
								, 
								<gap answers="">0</gap>
								) et la dernière à la position (
								<gap answers="">4</gap>
								, 
								<gap answers="">9</gap>
								)
							</paragraph>
							<paragraph>
								La première valeur d'un tableau de <formatted style="bold">n*m</formatted> éléments se trouve à la position (
								<gap answers="">0</gap>
								, 
								<gap answers="">0</gap>
								) et la dernière à la position (
								<gap answers="n-1,n - 1,n -1,n- 1">n-1</gap>
								, 
								<gap answers="m-1,m - 1,m -1,m- 1">m-1</gap>
								)
							</paragraph>
            </gapText>
            <solution/>
          </fillInBlanks>
        </selfCheck>
      <!--/act-->
      
      <!--act-->
        <selfCheck title="Déclaration et création" shuffle="yes">
          <fillInBlanks>
            <question> </question>
            <gapText>
							L'instruction de <formatted style="bold">déclaration</formatted> d'un tableau de chaines à deux dimensions appelé <formatted style="java">chainess</formatted> est            
							<gap answers="">String</gap>
							<gap answers="[][],[ ] [ ],[] [],[ ][],[ ] [],[][ ],[] [ ]">[][]</gap>
							<gap answers="">chainess</gap>
							; 
							<paragraph>
								L'instruction de <formatted style="bold">création (et seulement de création)</formatted> 
								d'un tableau d'entiers à deux dimensions de 5*3 entiers appelé <formatted style="java">entierss</formatted> est 
								<gap answers="">entierss</gap>
								<gap answers="">=</gap>
								<gap answers="">new</gap>
								<gap answers="">int</gap>
								<gap answers="[5][3],[ 5 ][ 3 ],[5] [3],[ 5 ] [ 3 ]">[5][3]</gap>
								;         
							</paragraph>
							<paragraph>
								L'instruction de <formatted style="bold">déclaration et de création</formatted> d'un tableau de caractères à trois dimensions de 5*3*4 caractères appelé 
								<formatted style="java">caractèresss</formatted> est 
								<gap answers="">char</gap>
								<gap answers="[][][],[ ][ ][ ],[] [] [],[ ] [ ] [ ]">[][][]</gap>
								<gap answers="">caractèresss</gap>
								<gap answers="">=</gap>
								<gap answers="">new</gap>
								<gap answers="">char</gap>
								<gap answers="[5][3][4],[ 5 ][ 3 ][ 4 ],[5] [3] [4],[ 5 ] [ 3 ] [ 4 ]">[5][3][4]</gap>
								; 
							</paragraph>
            </gapText>
            <solution>
              Vous constatez que la dimension d'un tableau est aussi le nombre de crochets que l'on utilise lors de sa création 
              et que la taille est également spécifiée par la même occasion.<newLine/> 
              Cependant, il ne faut pas confondre ces deux notions.
            </solution>
          </fillInBlanks>
        </selfCheck>
      
        <selfCheck title="Initialisation" shuffle="no">
          <fillInBlanks>
            <question></question>
            <gapText>
              L'instruction <formatted style="java">entierss = new int[5][3];</formatted> 
              crée un tableau à deux dimensions où les éléments sont initialisés à                  
              <gap answers="">0</gap>. 
              <paragraph>
                L'instruction qui permet de déclarer, créer et initialiser un tableau de réels <formatted style="java">réelss</formatted> 
                initialisé avec les valeurs données 
              </paragraph>
              <table>
                <tablerow >
                  <tabledata width="30" units="pixels" align="center">1.1</tabledata>
                  <tabledata width="30" units="pixels" align="center">1.2</tabledata>
                </tablerow>
                <tablerow>
                  <tabledata align="center">2.1</tabledata>
                  <tabledata align="center">2.2</tabledata>
                </tablerow>
                <tablerow>
                  <tabledata align="center">3.1</tabledata>
                  <tabledata align="center">3.2</tabledata>
                </tablerow>
              </table>
              <paragraph>
                est                  
                <gap answers="">double</gap>
                
                <gap answers="[][],[ ] [ ],[] [],[ ][],[ ] [],[][ ],[] [ ]">[][]</gap>
                
                <gap answers="">réelss</gap>
                =     
                
                <gap answers="{{1.1,1.2},{2.1,2.2},{3.1,3.2}}/{{1.1, 1.2}, {2.1, 2.2}, {3.1, 3.2}}/{ {1.1,1.2},{2.1,2.2},{3.1,3.2} }/{ {1.1, 1.2}, {2.1, 2.2}, {3.1, 3.2} }" separator="/">
                  {{1.1,1.2},{2.1,2.2},{3.1,3.2}}
                </gap>
                ;                
              </paragraph>
            </gapText>
            <solution/>
          </fillInBlanks>
        </selfCheck>
        
        <selfCheck title="Sélection multiple" shuffle="yes">
          <multipleChoice>
            <question>Le tableau <formatted style="java">entierss</formatted> contenant les élements <formatted style="java">{{3,4},{5},{6,7,8}}</formatted></question>
            <answer feedback="" correct="no">est un tableau d'entiers.</answer>
            <answer feedback="" correct="yes">est un tableau de tableaux d'entiers.</answer>
            <answer feedback="" correct="no">est un tableau à trois dimensions.</answer>
            <answer feedback="" correct="yes">est un tableau à deux dimensions.</answer>
            <answer feedback="" correct="no">est un tableau à une dimension.</answer>
          </multipleChoice>
        </selfCheck>

          <paragraph title="Vrai ou faux" >
            Reprenons le tableau <formatted style="java">entierss</formatted> contenant les élements <formatted style="java">{{3,4},{5},{6,7,8}}</formatted>.
          </paragraph>
                
        <selfCheck shuffle="no">
          <multipleChoice>
            <question><formatted style="java">entierss[1]</formatted> vaut 5.</question>
            <answer feedback="Pour atteindre un élément du tableau à deux dimensions il faut utiliser deux indices. Rappelez vous que le nombre de crochets est égal à la dimension du tableau et au nombre d'indices nécessaires pour atteindre un élément." 
              correct="no">vrai</answer>
            <answer feedback="C'est entierss[1][0] qui vaut 5. entiers[1] est le tableau à une dimension qui vaut {5}." correct="yes">faux</answer>
          </multipleChoice>
        </selfCheck>
        
        <selfCheck shuffle="no">
          <multipleChoice>
            <question><formatted style="java">entierss[1][2]</formatted> vaut 4.</question>
            <answer feedback="entierss[1][2] est un élément qui n'existe pas." correct="no">vrai</answer>
            <answer feedback="entierss[1][2] est un élément qui n'existe pas." correct="yes">faux</answer>
            </multipleChoice>
        </selfCheck>
        
        <selfCheck shuffle="no">
          <multipleChoice>
            <question><formatted style="java">entierss[2][1] = 4;</formatted> remplace la valeur 7 par la valeur 4.</question>
            <answer feedback="" correct="yes">vrai</answer>
            <answer feedback="" correct="no">faux</answer>
          </multipleChoice>
        </selfCheck>
        
        <selfCheck shuffle="no">
          <multipleChoice>
            <question>Si <formatted style="java">entiersss</formatted> est un tableau à 3 dimensions,
            il est possible d'écrire l'instruction
            <formatted style="java">entierss = entiersss;</formatted></question>
            <answer feedback="La déclaration d'un tableau réserve un emplacement sur la pile pour une référence du type du tableau. Comme nos références ont des types différents cela provoque une erreur de compilation pour cause d'incompatibilité." 
              correct="no">vrai</answer>
            <answer feedback="La déclaration d'un tableau réserve un emplacement sur la pile pour une référence du type du tableau. Comme nos références ont des types différents cela provoque une erreur de compilation pour cause d'incompatibilité." correct="yes">faux</answer>
          </multipleChoice>
        </selfCheck>
        
        <selfCheck title="Quiz" shuffle="yes">
          <multipleChoice>
            <question>Pour notre tableau <formatted style="java">entierss</formatted> contenant toujours 
              les élements <formatted style="java">{{3,4},{5},{6,7,8}}</formatted>, l'instruction <formatted style="java">System.out.println (entierss[1][1]);</formatted>
            </question>
            <answer feedback="" correct="no">n'affiche rien.</answer>
            <answer feedback="" correct="no">affiche une valeur se trouvant en mémoire.</answer>
            <answer feedback="" correct="no">provoque une erreur à la compilation.</answer>
            <answer feedback="" correct="yes">provoque une  erreur à l'exécution.</answer>
          </multipleChoice>
        </selfCheck>
        
        <selfCheck title="Tailles d'un tableau à deux dimensions" shuffle="no">
          <fillInBlanks>
            <question>
					Soit le tableau <formatted style="java">entierss</formatted> contenant 
					les éléments <formatted style="java">{{3,4},{5,5},{6,7}}</formatted>.
			</question>
            <gapText>
					La taille de sa première dimension est donnée par <gap answers="">entierss.length</gap>.
					Cette valeur vaut <gap answers="">3</gap> dans notre exemple.
					<newLine/>
					La taille de sa seconde dimension est donnée par 
					<gap answers="entierss[0].length,entierss[1].length,entierss[2].length">entierss[0].length</gap>.
					Cette valeur vaut <gap answers="">2</gap> dans notre exemple.
            </gapText>
            <solution/>
          </fillInBlanks>
        </selfCheck>
        
      </act>
    </learningObject>
  
    <learningObject title="Survol du langage : i++ et ++i">
    
      <clarify>
        <paragraph title="Pré/post incrémentation" icon="icon_reading"/>
				<paragraph>
				  L'instuction <formatted style="java">i++;</formatted> est équivalente à <formatted style="java">++i;</formatted> 
				  mais ce n'est pas le cas de l'expression <formatted style="java">i++</formatted> et de <formatted style="java">++i</formatted>.
        </paragraph>
      </clarify>
      
      <act>
      
        <selfCheck title="Quiz" shuffle="yes">
          <fillInBlanks>
            <question>Soient les instructions suivantes :
              <paragraph cssClass="java">
<![CDATA[
  int i=1;
  i++;
  System.out.println(i);
}]]>      </paragraph>
            </question>
            <gapText>affiche <gap answers="">2</gap> 
            </gapText>
            <solution>L'instruction <formatted style="java">i++;</formatted> incrémente la variable i de 1.</solution>
          </fillInBlanks>
        </selfCheck>
       
        <selfCheck title="Quiz" shuffle="yes">
          <fillInBlanks>
            <question>Soient les instructions suivantes :
              <paragraph cssClass="java">
<![CDATA[
  int i=1;
  ++i;
  System.out.println(i);
}]]>      </paragraph>
            </question>
            <gapText>affiche <gap answers="">2</gap> 
            </gapText>
            <solution>L'instruction <formatted style="java">++i;</formatted> incrémente la variable i de 1.</solution>
          </fillInBlanks>
        </selfCheck>
      
        <selfCheck title="Quiz" shuffle="yes">
          <multipleChoice>
            <question>La boucle 
              <paragraph cssClass="java">
<![CDATA[
  for (int i=0; i<10; i=i+1){
    System.out.print(i + " ");
  }    
]]>      </paragraph>
affiche
            </question>
            <answer feedback="" correct="no">0 1 2 3 4 5 6 7 8 9 10</answer>
            <answer feedback="" correct="yes">0 1 2 3 4 5 6 7 8 9 </answer>
            <answer feedback="" correct="no">1 2 3 4 5 6 7 8 9 10</answer>
            <answer feedback="" correct="no">0 1 2 3 4 5 6 7 8 9 10</answer>
            <answer feedback="" correct="no">0 1 2 3 4 5 6 7 8 9 10 11</answer>
            <answer feedback="" correct="no">1 2 3 4 5 6 7 8 9 10 11</answer>
          </multipleChoice>
        </selfCheck>

      
        <selfCheck title="Quiz" shuffle="yes">
          <multipleChoice>
            <question>La boucle 
              <paragraph cssClass="java">
<![CDATA[
  for (int i=0; i<10; i++){
    System.out.print(i + " ");
  }    
]]>      </paragraph>
affiche
            </question>
            <answer feedback="" correct="no">0 1 2 3 4 5 6 7 8 9 10</answer>
            <answer feedback="" correct="yes">0 1 2 3 4 5 6 7 8 9 </answer>
            <answer feedback="" correct="no">1 2 3 4 5 6 7 8 9 10</answer>
            <answer feedback="" correct="no">0 1 2 3 4 5 6 7 8 9 10</answer>
            <answer feedback="" correct="no">0 1 2 3 4 5 6 7 8 9 10 11</answer>
            <answer feedback="" correct="no">1 2 3 4 5 6 7 8 9 10 11</answer>
          </multipleChoice>
        </selfCheck>
        
        <selfCheck title="Quiz" shuffle="yes">
          <multipleChoice>
            <question>La boucle 
              <paragraph cssClass="java">
<![CDATA[
  for (int i=0; i<10; ++i){
    System.out.print(i + " ");
  }    
]]>      </paragraph>
affiche
            </question>
            <answer feedback="" correct="no">0 1 2 3 4 5 6 7 8 9 10</answer>
            <answer feedback="" correct="yes">0 1 2 3 4 5 6 7 8 9 </answer>
            <answer feedback="" correct="no">1 2 3 4 5 6 7 8 9 10</answer>
            <answer feedback="" correct="no">0 1 2 3 4 5 6 7 8 9 10</answer>
            <answer feedback="" correct="no">0 1 2 3 4 5 6 7 8 9 10 11</answer>
            <answer feedback="" correct="no">1 2 3 4 5 6 7 8 9 10 11</answer>
          </multipleChoice>
        </selfCheck>
        
        
        <selfCheck title="Quiz" shuffle="yes">
          <fillInBlanks>
            <question>Soient les instructions suivantes :
              <paragraph cssClass="java">
<![CDATA[
  int i=1;
  i=i++ + ++i;
  System.out.println(i);
]]>      </paragraph>
            </question>
            <gapText>affiche <gap answers="">4</gap> 
            </gapText>
            <solution>
              Décomposons l'instruction <formatted style="java">i=i++ + ++i;</formatted> :
              <table 	title="" wdith="300" units="pixels">
					<tablerow>
						<tableheading width="100" units="pixels">valeur de i</tableheading>
						<tableheading width="100" units="pixels">valeur de l'expression intermédiaire</tableheading>
						<tableheading width="100" units="pixels"><formatted style="java">i++ + ++i</formatted></tableheading>
					</tablerow>
					
					<tablerow>
						<tabledata>
							<paragraph>
								Au départ, <formatted style="java">i</formatted> vaut 1
							</paragraph>
						</tabledata>
						<tabledata>
						  <paragraph>
						  </paragraph>
						</tabledata>
						<tabledata>
						  <paragraph>
						  </paragraph>
						</tabledata>
					</tablerow>
					
					<tablerow>
						<tabledata>
						  <paragraph>
						    1
						  </paragraph>
						</tabledata>
						<tabledata>
							<paragraph>
							  Évaluons l'expression <formatted style="java">i++</formatted> : 
							</paragraph>
							<paragraph>
							  l'expression prend la valeur de <formatted style="java">i</formatted> avant que la variable ne soit incrémentée, 
							  c-à-d que l'expression <formatted style="java">i++</formatted> vaut 1
							</paragraph>
						</tabledata>
						<tabledata>
						  <paragraph>
    					  1 + ...
						  </paragraph>
						</tabledata>
					</tablerow>
					
					<tablerow>
						<tabledata>
							<paragraph>
							  et <formatted style="java">i</formatted> passe à 2
							</paragraph>
						</tabledata>
						<tabledata>
							<paragraph>
							</paragraph>
						</tabledata>
						<tabledata>
						  <paragraph>
						    1 + ...
						  </paragraph>
						</tabledata>
					</tablerow>
					
					<tablerow>
						<tabledata>
						  <paragraph>
						    2
						  </paragraph>
						</tabledata>
						<tabledata>
							<paragraph>
							  Évaluons l'expression <formatted style="java">++i</formatted> : 
							</paragraph>
							<paragraph>
							  l'expression prend la valeur de <formatted style="java">i</formatted> après que la variable soit incrémentée
							</paragraph>
						</tabledata>
						<tabledata>
						  <paragraph>
    					  1 + 
						  </paragraph>
						</tabledata>
					</tablerow>
					
					<tablerow>
						<tabledata>
						  <paragraph>
						    <formatted style="java">i</formatted> prend la valeur 3
						  </paragraph>
						</tabledata>
						<tabledata>
							<paragraph>
							</paragraph>
						</tabledata>
						<tabledata>
						  <paragraph>
    					  1 + 
						  </paragraph>
						</tabledata>
					</tablerow>
					
					<tablerow>
						<tabledata>
						  <paragraph>
						    3
						  </paragraph>
						</tabledata>
						<tabledata>
							<paragraph>
							  et l'expression <formatted style="java">i++</formatted> prend la valeur 3
							</paragraph>
						</tabledata>
						<tabledata>
						  <paragraph>
    					  1 + 3
						  </paragraph>
						</tabledata>
					</tablerow>
					
					<tablerow>
						<tabledata>
						  <paragraph>
						    3
						  </paragraph>
						</tabledata>
						<tabledata>
							<paragraph>
							  l'expression <formatted style="java">i = i++ + ++i</formatted> affecte à <formatted style="java">i</formatted> 
							  la valeur de l'expression <formatted style="java">i++ + ++i</formatted> c-à-d la valeur 1 + 3 c-à-d la valeur 4
							</paragraph>
						</tabledata>
						<tabledata>
						  <paragraph>
    					  1 + 3
						  </paragraph>
						</tabledata>
					</tablerow>
					
					<tablerow>
						<tabledata>
						  <paragraph>
						    4
						  </paragraph>
						</tabledata>
						<tabledata>
							<paragraph>
							</paragraph>
						</tabledata>
						<tabledata>
						  <paragraph>
						  </paragraph>
						</tabledata>
					</tablerow>
					
        </table>
            
            </solution>
          </fillInBlanks>
        </selfCheck>
        
      </act>
    
    </learningObject>
  
  
		<learningObject title="Logique">
			<clarify>
				Assurez-vous de venir au laboratoire avec vos solutions des exercices 2, 3, 7 et 7 du chapitre 10 "Les tableaux à 2 dimensions" de votre
				cours de logique. 
			</clarify>
		</learningObject>
		
		<learningObject title="Bravo">
			<clarify>
				Si vous avez réussi à répondre correctement aux questions précédentes,
				c'est que vous êtes prêt à venir au laboratoire dans les meilleures
				conditions!
      </clarify>
		</learningObject>
	</unit>
  
	<metadata>
		<organisation level="1ère année" module="Laboratoires Java">
			<creationPosition><posNumber>8</posNumber></creationPosition>
		</organisation>
		<prerequisites><preReqItem label="none"/></prerequisites>
		<keywords><keywordItem>Java</keywordItem><keywordItem>Linux</keywordItem></keywords>
		<technical>
			<technicalRequirement>
				<type>Browser</type>
				<name>any</name>
				<minimumVersion>unknown</minimumVersion>
			</technicalRequirement>
		</technical>
		<lessonInfo>
			<language language="fr" derived="no"/>
			<lifecycle>
				<version>2013 - 2014</version>
				<contribute>
<person name="BEJ" />  <person name="CLG" />  <person name="CLR" />  <person name="DNA" />  <person name="MCD" />  <person name="NPX" />  <person name="PBT" />  <person name="SRV" /> 
				</contribute>
			</lifecycle>
			<educational><typicalLearningTime><time/></typicalLearningTime></educational>
		</lessonInfo>
		<rights>
			<cost>no</cost>
			<copyright>Distribué sous licence Creative Commons Paternité - Partage à l'Identique 2.0 Belgique</copyright>
			<copyrightURL>http://creativecommons.org/licenses/by-sa/2.0/be/</copyrightURL>
		</rights>
	</metadata>
	
</lesson>
